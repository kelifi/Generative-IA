from pydantic import BaseModel, Field


class ModelMetadata(BaseModel):
    load_in_8bit: int = Field(..., description="whether or not the model is loaded in 8bit.")
    load_in_4bit: int = Field(..., description="whether or not the model is loaded in 4bit.")
    max_new_tokens: int = Field(..., description="Number of the tokens to be generated by the model.")
    no_repeat_ngram_size: int = Field(..., description="All ngrams of that size can only occur once.")
    repetition_penalty: float = Field(..., description="The repetition penalty of the model.")


class ModelAnswer(BaseModel):
    response: str = Field(..., description="Answer generated by the model.")
    prompt_length: int | None = Field(default=None, description="Total prompt length in terms of tokens.")
    inference_time: float = Field(..., description="Inference time in terms of seconds.")
    model_name: str = Field(..., description="The name of the model.")
    metadata: ModelMetadata | None = Field( description="The hyperparameters of the model.")
